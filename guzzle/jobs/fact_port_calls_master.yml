version: 1
job:
  type: "processing"
  tags:
  - "epsdl_dim"
source:
  endpoint: "lo_delta_tables"
  properties:
    sql: "select \nagreed_speed,\nagreed_speed_a,\nagreed_speed_cons,\nagreed_speed_cons_a,\nagreed_speed_cons_d,\nagreed_speed_cons_o,\nagreed_speed_d,\nagreed_speed_engine_load,\nagreed_speed_engine_load_a,\nagreed_speed_engine_load_d,\nagreed_speed_engine_load_o,\nagreed_speed_o,\nanchorage_delay,\narea,\narr_dep_status,\narrival_local,\nballast_laden_from_port,\nballast_laden_to_port,\nballast_laden_to_port_a,\nballast_laden_to_port_d,\nballast_laden_to_port_o,\nberth_to_pilot,\nbusiness_date,\ncargo_inspector,\ncargo_scheduler,\ncountry,\ndem_des_days,\ndem_des_rate,\ndeparture_local,\nest_cost_base,\neta_gmt,\netb,\netd_gmt,\nexp_ref,\nextra_port_days,\nextra_sea_days,\nfixture_no,\nidle_days,\ninstructed_sat_local,\ninstructed_speed,\ninstructed_speed_a,\ninstructed_speed_d,\ninstructed_speed_o,\nintegration_key,\nis_current_port_call,\nlast_update_gmt,\nlast_user_id,\nlow_speed_days,\nlow_speed_miles,\nlow_sulfur_eca,\nls_miles,\nls_port_days,\nls_sea_days,\nmaster_seq,\nmiles,\nname,\norder,\npilot_to_berth,\nport_days,\nport_exp_amount_base,\nport_exp_amount_local,\nport_exp_curr,\nport_exp_exch_rate,\nport_func,\nport_name,\nport_no,\nport_range,\nport_region,\nport_status_code,\nremarks_fixture,\nremarks_operations,\nsea_days,\nseq,\nspeed_from_port,\nspeed_instruction_type,\nspeed_to_port,\ntelegram_date_a,\ntelegram_date_d,\ntelegram_date_o,\ntelegram_type_a,\ntelegram_type_d,\ntelegram_type_o,\nun_code,\nvessel_code,\nvessel_id,\nvia,\nvoyage_no,\nw_batch_id,\nw_curr_rec_flg,\nw_data_src_id,\nw_job_instance_id,\nw_location,\nw_refresh_ts,\nw_x_custom,\nweather_factor_from_port,\nweather_factor_to_port,\nlatitude,\nlongitude,\ncase when latitude like '%N%'\nthen\n(\ncast(case when instr(latitude,'°')=0 then substr(latitude,1,locate(' ',latitude)-1) else substr(latitude,1,locate('°',latitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(latitude,locate(' ',latitude),locate(\"'\",latitude) - locate(' ',latitude))) as decimal(38,18))/60)\n)\nelse\n(\n(\ncast(case when instr(latitude,'°')=0 then substr(latitude,1,locate(' ',latitude)-1) else substr(latitude,1,locate('°',latitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(latitude,locate(' ',latitude),locate(\"'\",latitude) - locate(' ',latitude))) as decimal(38,18))/60)\n)*-1\n)\nend\nas lat_num,\n\ncase when longitude like '%E%'\nthen\n(\ncast(case when instr(longitude,'°')=0 then substr(longitude,1,locate(' ',longitude)-1) else substr(longitude,1,locate('°',longitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(longitude,locate(' ',longitude),locate(\"'\",longitude) - locate(' ',longitude))) as decimal(38,18))/60)\n)\nelse\n(\n(\ncast(case when instr(longitude,'°')=0 then substr(longitude,1,locate(' ',longitude)-1) else substr(longitude,1,locate('°',longitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(longitude,locate(' ',longitude),locate(\"'\",longitude) - locate(' ',longitude))) as decimal(38,18))/60)\n)*-1\n)\nend as lon_num\nfrom ${p_epsdl_db}.fact_port_calls_imos \n\n\nunion\n\n\nselect \ndanaos.agreed_speed,\ndanaos.agreed_speed_a,\ndanaos.agreed_speed_cons,\ndanaos.agreed_speed_cons_a,\ndanaos.agreed_speed_cons_d,\ndanaos.agreed_speed_cons_o,\ndanaos.agreed_speed_d,\ndanaos.agreed_speed_engine_load,\ndanaos.agreed_speed_engine_load_a,\ndanaos.agreed_speed_engine_load_d,\ndanaos.agreed_speed_engine_load_o,\ndanaos.agreed_speed_o,\ndanaos.anchorage_delay,\ndanaos.area,\ndanaos.arr_dep_status,\ndanaos.arrival_local,\ndanaos.ballast_laden_from_port,\ndanaos.ballast_laden_to_port,\ndanaos.ballast_laden_to_port_a,\ndanaos.ballast_laden_to_port_d,\ndanaos.ballast_laden_to_port_o,\ndanaos.berth_to_pilot,\ndanaos.business_date,\ndanaos.cargo_inspector,\ndanaos.cargo_scheduler,\ndanaos.country,\ndanaos.dem_des_days,\ndanaos.dem_des_rate,\ndanaos.departure_local,\ndanaos.est_cost_base,\ndanaos.eta_gmt,\ndanaos.etb,\ndanaos.etd_gmt,\ndanaos.exp_ref,\ndanaos.extra_port_days,\ndanaos.extra_sea_days,\ndanaos.fixture_no,\ndanaos.idle_days,\ndanaos.instructed_sat_local,\ndanaos.instructed_speed,\ndanaos.instructed_speed_a,\ndanaos.instructed_speed_d,\ndanaos.instructed_speed_o,\ndanaos.integration_key,\ndanaos.is_current_port_call,\ndanaos.last_update_gmt,\ndanaos.last_user_id,\ndanaos.low_speed_days,\ndanaos.low_speed_miles,\ndanaos.low_sulfur_eca,\ndanaos.ls_miles,\ndanaos.ls_port_days,\ndanaos.ls_sea_days,\ndanaos.master_seq,\ndanaos.miles,\ncase \nwhen danaos.name='B' then 'Bunkering'\nwhen danaos.name='C' then 'CANCELLED'\nwhen danaos.name='D' then 'Discharge'\nwhen danaos.name='DP' then 'Disembark rep'\nwhen danaos.name='F' then 'FW SUPPLY'\nwhen danaos.name='I' then 'Inspection'\nwhen danaos.name='L' then 'Loading'\nwhen danaos.name='LD' then 'Load & Discharge'\nwhen danaos.name='M' then 'Maintenace'\nwhen danaos.name='O' then 'ORDERS'\nwhen danaos.name='ORD' then 'ORDERS'\nwhen danaos.name='P' then 'Passing'\nwhen danaos.name='R' then 'RELOAD'\nwhen danaos.name='RP' then 'REPAIR'\nwhen danaos.name='T' then 'TRANSIT'\nwhen danaos.name='W' then 'Waiting Berth'\nelse danaos.name end as name,\ndanaos.order,\ndanaos.pilot_to_berth,\ndanaos.port_days,\ndanaos.port_exp_amount_base,\ndanaos.port_exp_amount_local,\ndanaos.port_exp_curr,\ndanaos.port_exp_exch_rate,\ndanaos.port_func,\ndanaos.port_name,\ndanaos.port_no,\ndanaos.port_range,\ndanaos.port_region,\ndanaos.port_status_code,\ndanaos.remarks_fixture,\ndanaos.remarks_operations,\ndanaos.sea_days,\ndanaos.seq,\ndanaos.speed_from_port,\ndanaos.speed_instruction_type,\ndanaos.speed_to_port,\ndanaos.telegram_date_a,\ndanaos.telegram_date_d,\ndanaos.telegram_date_o,\ndanaos.telegram_type_a,\ndanaos.telegram_type_d,\ndanaos.telegram_type_o,\ndanaos.un_code,\ndanaos.vessel_code,\ndanaos.vessel_id,\ndanaos.via,\ndanaos.voyage_no,\ndanaos.w_batch_id,\ndanaos.w_curr_rec_flg,\ndanaos.w_data_src_id,\ndanaos.w_job_instance_id,\ndanaos.w_location,\ndanaos.w_refresh_ts,\ndanaos.w_x_custom,\ndanaos.weather_factor_from_port,\ndanaos.weather_factor_to_port,\ndanaos.latitude,\ndanaos.longitude,\ncase when danaos.latitude like '%N%'\nthen\n(\ncast(case when instr(danaos.latitude,'°')=0 then substr(danaos.latitude,1,locate(' ',danaos.latitude)-1) else substr(danaos.latitude,1,locate('°',danaos.latitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(danaos.latitude,locate(' ',danaos.latitude),locate(\"'\",danaos.latitude) - locate(' ',danaos.latitude))) as decimal(38,18))/60)\n)\nelse\n(\n(\ncast(case when instr(danaos.latitude,'°')=0 then substr(danaos.latitude,1,locate(' ',danaos.latitude)-1) else substr(danaos.latitude,1,locate('°',danaos.latitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(danaos.latitude,locate(' ',danaos.latitude),locate(\"'\",danaos.latitude) - locate(' ',danaos.latitude))) as decimal(38,18))/60)\n)*-1\n)\nend\nas lat_num,\n\ncase when danaos.longitude like '%E%'\nthen\n(\ncast(case when instr(danaos.longitude,'°')=0 then substr(danaos.longitude,1,locate(' ',danaos.longitude)-1) else substr(danaos.longitude,1,locate('°',danaos.longitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(danaos.longitude,locate(' ',danaos.longitude),locate(\"'\",danaos.longitude) - locate(' ',danaos.longitude))) as decimal(38,18))/60)\n)\nelse\n(\n(\ncast(case when instr(danaos.longitude,'°')=0 then substr(danaos.longitude,1,locate(' ',danaos.longitude)-1) else substr(danaos.longitude,1,locate('°',danaos.longitude)-1) end as decimal(38,18))\n+\n(cast(trim(substr(danaos.longitude,locate(' ',danaos.longitude),locate(\"'\",danaos.longitude) - locate(' ',danaos.longitude))) as decimal(38,18))/60)\n)*-1\n)\nend as lon_num\nfrom  \n${p_epsdl_db}.fact_port_calls_danaos danaos\nleft join\n ${p_epsdl_db}.fact_port_calls_imos imos\non\nimos.voyage_No=danaos.voyage_No\nand \nimos.vessel_code=danaos.vessel_code\nwhere\nimos.vessel_code is null"
target:
  operation: "overwrite"
  properties:
    template: "default"
    table: "${p_epsdl_db}.fact_port_calls_master"
  endpoint: "lo_delta_tables"
