{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "epsdldatafactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"Oracle1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle1'"
		},
		"Oracle_Danaos_Production_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle_Danaos_Production'"
		},
		"Oracle_datalake_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle_datalake'"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "203.92.109.65"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "vendor1.POC1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1GuzzleService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/execute/job"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerBI_SQL_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Power_Bi_Admin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"api": {
						"type": "string",
						"defaultValue": "activityevents"
					},
					"params": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('v1.0/myorg/admin/', dataset().api, '?', dataset().params)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IMOS_Rest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run_Stage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1GuzzleService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "api/batches/run_stage?mode=default"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/invokeJob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1GuzzleService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/api/execute/job"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "epsdlselfhostedintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "epsdlselfhostedintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "epsdlselfhostedintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle_Danaos_Production')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle_Danaos_Production_connectionString')]"
				},
				"connectVia": {
					"referenceName": "epsdlselfhostedintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle_datalake_connectionString')]"
				},
				"connectVia": {
					"referenceName": "epsdlselfhostedintegrationruntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_PBI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "JOB_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "MODULE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "JOB_GROUP",
						"type": "varchar"
					},
					{
						"name": "JOB_NAME",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "JOB_TYPE",
						"type": "varchar"
					},
					{
						"name": "JOB_SCRIPT",
						"type": "varchar"
					},
					{
						"name": "JOB_SCRIPT_MANUAL",
						"type": "varchar"
					},
					{
						"name": "LAST_RUNTIME_TS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PRIMARY_SRC_TABLE",
						"type": "varchar"
					},
					{
						"name": "PRIMARY_TGT_TABLE",
						"type": "varchar"
					},
					{
						"name": "CONTINUE_ON_ERROR_FLG",
						"type": "char"
					},
					{
						"name": "INACTIVE_FLG",
						"type": "char"
					},
					{
						"name": "ATTR1",
						"type": "varchar"
					},
					{
						"name": "ATTR2",
						"type": "varchar"
					},
					{
						"name": "ATTR3",
						"type": "varchar"
					},
					{
						"name": "ATTR4",
						"type": "varchar"
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "CREATED_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPDATED_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FULL_LOAD_FLAG",
						"type": "char"
					},
					{
						"name": "PRUNE_DAYS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "INITIAL_EXTRACT_DATE",
						"type": "date"
					},
					{
						"name": "JOB_PHASE",
						"type": "varchar"
					},
					{
						"name": "excution_fullload_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BD_refresh_job"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsertPowerBIUsageMetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InsertPowerBIUsageMetrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@pipeline().parameters.Token",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$['continuationUri']"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": {
									"value": "@concat('[',pipeline().parameters.SchemaName,'].[LoadPowerBIRaw]')",
									"type": "Expression"
								},
								"sqlWriterTableType": {
									"value": "@concat('[',pipeline().parameters.SchemaName,'].PowerBIActivityEvent')",
									"type": "Expression"
								},
								"storedProcedureTableTypeParameterName": "RAW_POWERBI_ACTIVITY_LOG",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Activity']"
										},
										"sink": {
											"name": "Activity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ActivityId']"
										},
										"sink": {
											"name": "ActivityId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AggregatedWorkspaceInformation']"
										},
										"sink": {
											"name": "AggregatedWorkspaceInformation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AppName']"
										},
										"sink": {
											"name": "AppName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AppReportId']"
										},
										"sink": {
											"name": "AppReportId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactId']"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactName']"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AuditedArtifactInformation']"
										},
										"sink": {
											"name": "AuditedArtifactInformation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientIP']"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ConsumptionMethod']"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CreationTime']"
										},
										"sink": {
											"name": "CreationTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CustomVisualAccessTokenResourceId']"
										},
										"sink": {
											"name": "CustomVisualAccessTokenResourceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CustomVisualAccessTokenSiteUri']"
										},
										"sink": {
											"name": "CustomVisualAccessTokenSiteUri",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DashboardId']"
										},
										"sink": {
											"name": "DashboardId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DashboardName']"
										},
										"sink": {
											"name": "DashboardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DataConnectivityMode']"
										},
										"sink": {
											"name": "DataConnectivityMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DataflowId']"
										},
										"sink": {
											"name": "DataflowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DataflowName']"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DataflowType']"
										},
										"sink": {
											"name": "DataflowType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetId']"
										},
										"sink": {
											"name": "DatasetId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetName']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Datasets']"
										},
										"sink": {
											"name": "Datasets",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Datasources']"
										},
										"sink": {
											"name": "Datasources",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DistributionMethod']"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ExportEventEndDateTimeParameter']"
										},
										"sink": {
											"name": "ExportEventEndDateTimeParameter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ExportEventStartDateTimeParameter']"
										},
										"sink": {
											"name": "ExportEventStartDateTimeParameter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ExportedArtifactInfo']"
										},
										"sink": {
											"name": "ExportedArtifactInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['FolderDisplayName']"
										},
										"sink": {
											"name": "FolderDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['FolderObjectId']"
										},
										"sink": {
											"name": "FolderObjectId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['GatewayId']"
										},
										"sink": {
											"name": "GatewayId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['GatewayName']"
										},
										"sink": {
											"name": "GatewayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['GatewayType']"
										},
										"sink": {
											"name": "GatewayType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Id']"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ImportDisplayName']"
										},
										"sink": {
											"name": "ImportDisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ImportId']"
										},
										"sink": {
											"name": "ImportId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ImportSource']"
										},
										"sink": {
											"name": "ImportSource",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ImportType']"
										},
										"sink": {
											"name": "ImportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsSuccess']"
										},
										"sink": {
											"name": "IsSuccess",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsUpdateAppActivity']"
										},
										"sink": {
											"name": "IsUpdateAppActivity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemName']"
										},
										"sink": {
											"name": "ItemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['MentionedUsersInformation']"
										},
										"sink": {
											"name": "MentionedUsersInformation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ObjectId']"
										},
										"sink": {
											"name": "ObjectId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrgAppPermission']"
										},
										"sink": {
											"name": "OrgAppPermission",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrganizationId']"
										},
										"sink": {
											"name": "OrganizationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RecordType']"
										},
										"sink": {
											"name": "RecordType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RefreshType']"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportId']"
										},
										"sink": {
											"name": "ReportId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportName']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RequestId']"
										},
										"sink": {
											"name": "RequestId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['SharingInformation']"
										},
										"sink": {
											"name": "SharingInformation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['SwitchState']"
										},
										"sink": {
											"name": "SwitchState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TakingOverOwner']"
										},
										"sink": {
											"name": "TakingOverOwner",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TemplateAppFolderObjectId']"
										},
										"sink": {
											"name": "TemplateAppFolderObjectId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TemplateAppObjectId']"
										},
										"sink": {
											"name": "TemplateAppObjectId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TemplateAppOwnerTenantObjectId']"
										},
										"sink": {
											"name": "TemplateAppOwnerTenantObjectId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TemplateAppVersion']"
										},
										"sink": {
											"name": "TemplateAppVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TemplatePackageName']"
										},
										"sink": {
											"name": "TemplatePackageName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserAgent']"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserId']"
										},
										"sink": {
											"name": "UserId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserKey']"
										},
										"sink": {
											"name": "UserKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserType']"
										},
										"sink": {
											"name": "UserType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkSpaceName']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Workload']"
										},
										"sink": {
											"name": "Workload",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkspaceId']"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['activityEventEntities']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Power_Bi_Admin",
								"type": "DatasetReference",
								"parameters": {
									"api": "activityevents",
									"params": {
										"value": "@concat('startDateTime=''',pipeline().parameters.StartDateTime,'''&endDateTime=''',pipeline().parameters.EndDateTime,'''')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "PowerBI_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@concat('[',pipeline().parameters.SchemaName,'].PowerBIActivityEvent')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"StartDateTime": {
						"type": "string"
					},
					"EndDateTime": {
						"type": "string"
					},
					"Token": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "pbtest"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-06T04:33:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Power_Bi_Admin')]",
				"[concat(variables('factoryId'), '/datasets/PowerBI_SQL_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IterateAndRefreshPBI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IteratePowerBI",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.powerbiList",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "PowerBI_DataSet_Refresh",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PowerBI_DataSet_Refresh_Test_Loop",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TenantId": "bc5c7327-b12e-48db-a856-175591ecd2f0",
											"SPClientId": "8465ee6f-bb69-480c-9dd9-7ae4b9c81514",
											"SPSecret": "lkh-9MjYN-Bf7GZ8vKt98~_y7SK01aAwKS",
											"PBIAppWorkspaceId": "2f2ce11d-59ad-4e92-96cc-82aaaab85444",
											"PBIDatasetId": {
												"value": "@{item().datasetid}",
												"type": "Expression"
											},
											"Email": "thao.nguyen@justanalytics.com",
											"ReportName": {
												"value": "@{item().name}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"powerbiList": {
						"type": "array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-20T06:24:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrackGuzzleStageRun')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitUntilStageFinish",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(variables('statusChangedToRunning'), not(equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'RUNNING')), or(or(equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'SUCCESS'), equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'WARNING')), or(equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'FAILED'), equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'ABORTED'))))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait2minutes",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 120
									}
								},
								{
									"name": "GetStageStatus",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Wait2minutes",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select @{pipeline().parameters.stage} from dbo.batch_control where batch_id=@{pipeline().parameters.batch_id}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "GuzzleDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Status Changed To RUNNING",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetStageStatus",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(not(variables('statusChangedToRunning')), equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'RUNNING'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set status changed to RUNNING",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "statusChangedToRunning",
													"value": true
												}
											}
										]
									}
								}
							],
							"timeout": "0.04:00:00"
						}
					},
					{
						"name": "RaiseExceptionIfFailed",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WaitUntilStageFinish",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@if(or(equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'SUCCESS'), equals(activity('GetStageStatus').output.firstRow[pipeline().parameters.stage], 'WARNING')), 'SUCCESS', 1)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"stage": {
						"type": "string"
					},
					"batch_id": {
						"type": "string"
					}
				},
				"variables": {
					"status": {
						"type": "String"
					},
					"statusChangedToRunning": {
						"type": "Boolean"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-06T04:33:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/guzzle2_initilaize_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initialize Batch",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": {
										"value": "{\"contextParams\":{\"system\":\"ALL\",\"location\":\"ALL\"},\"environment\":\"test\"}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Initialize_Batch",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-20T06:24:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": "{\n  \"name\": \"One_Mill_Data_Set\",\n  \"jobParameters\": {\n    \"system\": \"EPStest\",\n    \"business_date\": \"2020-06-23 18:31:10\",\n    \"guzzle.spark.name\": \"guzzle_databricks_cluster\",\n    \"environment\": \"test\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "invokeJob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-06T04:33:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/invokeJob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: application/json",
									"requestBody": "{\n  \"name\": \"jb_data_sync_hardcoded\",\n  \"jobParameters\": {\n    \"system\": \"EPStest\",\n    \"business_date\": \"2020-06-23 18:31:10\",\n    \"guzzle.spark.name\": \"guzzle_databricks_cluster\",\n    \"environment\": \"test\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-06T04:33:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "test-data",
						"container": "epsdlcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Value1",
						"type": "String"
					},
					{
						"name": "Value2",
						"type": "String"
					},
					{
						"name": "Value3",
						"type": "String"
					},
					{
						"name": "Value4",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "TANKPAC",
					"table": "SUPPLIER_INVOICING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle1')]"
			]
		}
	]
}